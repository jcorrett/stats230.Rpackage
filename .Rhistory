lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")
p2<-autoplot(lb_SVD)+theme(legend.position = "none")
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+xlim(0,1)
p2<-autoplot(lb_SVD)+theme(legend.position = "none")
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_x_continuous(limits=c(0,1))
p2<-autoplot(lb_SVD)+theme(legend.position = "none")
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(0,1))
p2<-autoplot(lb_SVD)+theme(legend.position = "none")
gridExtra::grid.arrange(p1,p2,nrow=2)
1e-3
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(1e-6,1e-2))
p2<-autoplot(lb_SVD)+theme(legend.position = "none")
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(1e-6,1e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none")
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(1e-6,1e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(1e-6,1e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,5e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,5e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,5e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))+scale_x_discrete(name = "Function",limits=c("SVD"))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") scale_x_discrete(name = "Function",limits=c("SVD"))
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none")+ scale_x_discrete(name = "Function",limits=c("SVD"))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))+scale_x_discrete(labels=c("OLS_SVD(X,y)" = "SVD"))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))+scale_x_discrete(labels=c("OLS_SVD(X,y)" = "SVD"))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))+ labs(color = "Legend",title = "OLS Microbenchmarking")+theme(plot.title = element_text(hjust = 0.5))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 1000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 1000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))+ labs(color = "Legend",title = "OLS Microbenchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))+ labs(color = "Legend",title = "OLS Microbenchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))+ labs(color = "Legend",title = "OLS Microbenchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
mu <- c(1,1,1,1)
Sigma <- rbind(c(1,0.05,0.05,0.05),c(0.05,1,0.05,0.05),c(0.05,0.05,1,0.05),c(0.05,0.05,0.05,1))
N <- 10000
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(1,0.05,0.05,0.05),c(0.05,1,0.05,0.05),c(0.05,0.05,1,0.05),c(0.05,0.05,0.05,1))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(2,0.05,0.05,0.05),c(0.05,2,0.05,0.05),c(0.05,0.05,2,0.05),c(0.05,0.05,0.05,2))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(2,0.05,0.05,0.05),c(0.05,2,0.05,0.05),c(0.05,0.05,2,0.05),c(0.05,0.05,0.05,2))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(2,0.05,0.05,0.05),c(0.05,2,0.05,0.05),c(0.05,0.05,2,0.05),c(0.05,0.05,0.05,2))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(2,0.05,0.05,0.05),c(0.05,2,0.05,0.05),c(0.05,0.05,2,0.05),c(0.05,0.05,0.05,2))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(2,0.05,0.05,0.05),c(0.05,2,0.05,0.05),c(0.05,0.05,2,0.05),c(0.05,0.05,0.05,2))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(2,0.05,0.05,0.05),c(0.05,2,0.05,0.05),c(0.05,0.05,2,0.05),c(0.05,0.05,0.05,2))
N <- 10000
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(1,0.05,0.05,0.05),c(0.05,1,0.05,0.05),c(0.05,0.05,1,0.05),c(0.05,0.05,0.05,1))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(1,0.05,0.05,0.05),c(0.05,1,0.05,0.05),c(0.05,0.05,1,0.05),c(0.05,0.05,0.05,1))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(1,0.05,0.05,0.05),c(0.05,1,0.05,0.05),c(0.05,0.05,1,0.05),c(0.05,0.05,0.05,1))
N <- 10000
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
SVD <- svd(X)
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
lb_QR <- mark(backsolve(R,t(Q)%*%y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(SVD$v%*%diag(1/SVD$d)%*%t(SVD$u)%*%y,max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
SVD <- svd(X)
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
lb_QR <- mark(backsolve(R,t(Q)%*%y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(SVD$v%*%diag(1/SVD$d)%*%t(SVD$u)%*%y,max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(0,2e-4))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(0,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
SVD <- svd(X)
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
lb_QR <- mark(backsolve(R,t(Q)%*%y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(SVD$v%*%diag(1/SVD$d)%*%t(SVD$u)%*%y,max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-7,2e-4))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-7,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
SVD <- svd(X)
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
lb_QR <- mark(backsolve(R,t(Q)%*%y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(SVD$v%*%diag(1/SVD$d)%*%t(SVD$u)%*%y,max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-7,5e-5))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-7,5e-5))
gridExtra::grid.arrange(p1,p2,nrow=2)
diag(SVD$d)
1/diag(SVD$d)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
SVD <- svd(X)
U <- SVD$u
S <- diag(1/SVD$d)
V <- SVD$v
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
lb_QR <- mark(backsolve(R,t(Q)%*%y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(V%*%S%*%t(U)%*%y,max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-7,5e-5))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-7,5e-5))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
SVD <- svd(X)
U <- SVD$u
S <- diag(1/SVD$d)
V <- SVD$v
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
lb_QR <- mark(backsolve(R,t(Q)%*%y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(V%*%S%*%t(U)%*%y,max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-6,4e-5))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-6,4e-5))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
SVD <- svd(X)
U <- SVD$u
S <- diag(1/SVD$d)
V <- SVD$v
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
lb_QR <- mark(backsolve(R,t(Q)%*%y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(V%*%S%*%t(U)%*%y,max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-6,4e-5))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-6,4e-5))
gridExtra::grid.arrange(p1,p2,nrow=2)
detach("package:stats230.Rpackage", unload = TRUE)
remove.packages("stats230.Rpackage", lib="~/R/win-library/4.1")
knitr::opts_chunk$set(echo = TRUE)
library(bench)
library(ggplot2)
library(tidyr)
is_available <- require(stats230.Rpackage)
if (!is_available) {
library(devtools)
install_github("jcorrett/stats230.Rpackage")
}
library(stats230.Rpackage)
mu <- c(1,1,1,1)
Sigma <- rbind(c(1,0.05,0.05,0.05),c(0.05,1,0.05,0.05),c(0.05,0.05,1,0.05),c(0.05,0.05,0.05,1))
N <- 100
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
mu <- c(1,1,1,1)
Sigma <- rbind(c(1,0.05,0.05,0.05),c(0.05,1,0.05,0.05),c(0.05,0.05,1,0.05),c(0.05,0.05,0.05,1))
N <- 10000
x <- rand_MVN(mu,Sigma,N)
mu_hat <- rowMeans(x)
Sigma_hat <- cov(t(x))
mu_hat
Sigma_hat
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
beta_QR <- OLS_QR(X,y)
beta_SVD <- OLS_SVD(X,y)
y_hat_QR <- X%*%beta_QR
y_hat_SVD <- X%*%beta_SVD
lb_QR <- mark(OLS_QR(X,y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(OLS_SVD(X,y),max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-5,2e-4))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-5,2e-4))
gridExtra::grid.arrange(p1,p2,nrow=2)
data <- read.csv(file = 'C:/Users/Jack Corrette/Desktop/Statistical_Computing_Methods/homework2_regression.csv')
data <- as.matrix(data)
y <- data[,1]
X <- data[,-1]
SVD <- svd(X)
U <- SVD$u
S <- diag(1/SVD$d)
V <- SVD$v
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
lb_QR <- mark(backsolve(R,t(Q)%*%y),max_iterations = 10000,min_time = Inf)
lb_SVD <- mark(V%*%S%*%t(U)%*%y,max_iterations = 10000,min_time = Inf)
p1<-autoplot(lb_QR)+theme(legend.position = "none")+scale_y_continuous(limits=c(5e-6,4e-5))+ labs(color = "Legend",title = "OLS Benchmarking")+theme(plot.title = element_text(hjust = 0.5))
p2<-autoplot(lb_SVD)+theme(legend.position = "none") +scale_y_continuous(limits=c(5e-6,4e-5))
gridExtra::grid.arrange(p1,p2,nrow=2)
